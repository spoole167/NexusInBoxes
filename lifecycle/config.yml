#
# NOTE: The indentation in this file is crucial for proper processing. Please keep the existing indentation when editing it.
#
database:
  type: postgresql
  hostname: ${DATABASE_HOST}
  port: 5432
  name: ${DATABASE_NAME}
  username: ${DATABASE_USER}
  password: ${DATABASE_PASSWORD}

# Directory for data files.
sonatypeWork: ./sonatype-work/clm-server

# Path to a license file to automatically install if unlicensed.
licenseFile: /run/secrets/lifecycle

# HTTP Strict Transport Security (HSTS) is supported using dropwizard-web configuration
# HSTS headers are enabled by default, uncomment web: section below and set enabled: false to disable
# Refer to https://github.com/dropwizard/dropwizard-web#supports for detailed configuration guide
#web:
#  hsts:
#    enabled: true
#    maxAge: 365 days
#    includeSubDomains: true

# HTTP-specific options.
server:
  # The context path for the application. Note that this must have a leading slash.
  applicationContextPath: /

  applicationConnectors:

    - type: http

      # The port on which the HTTP server listens for service requests.
      # Because Java cannot drop privileges in a POSIX system, these
      # ports cannot be in the range 1-1024. A port value of 0 will
      # make the OS use an arbitrary unused port.
      port: 8070

      # The hostname of the interface to which the application HTTP server socket
      # will be bound. If omitted, the socket will listen on all
      # interfaces.
      #bindHost: 127.0.0.1  # only bind to loopback

  adminConnectors:

    - type: http

      # The port on which the HTTP server listens for administrative
      # requests. Subject to the same limitations as "port".
      port: 8071

      # The hostname of the interface to which the admin HTTP server socket
      # will be bound. If omitted, the socket will listen on all
      # interfaces.
      #bindHost: 127.0.0.1  # only bind to loopback

  # HTTP request log settings.
  requestLog:

    appenders:

        # Settings for logging to a file.
      - type: file

        # The file to which current statements will be logged.
        currentLogFilename: ./log/request.log

        logFormat: "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\""

        # When the log file rotates, the archived log will be renamed to this and gzipped. The
        # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
        # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
        archivedLogFilenamePattern: ./log/request-%d.log.gz

        # The number of archived files to keep.
        archivedFileCount: 50

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: DEBUG

  # Logger-specific settings.
  loggers:
    "com.sonatype.insight.scan": INFO
    "eu.medsea.mimeutil.MimeUtil2": INFO
    "org.apache.http": INFO
    "org.apache.http.wire": ERROR
    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": INFO   # WARNING: This reveals credentials at DEBUG level
    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": WARN
    "org.eclipse.jetty": INFO
    "org.postgresql.jdbc.PgConnection": INFO
    "org.quartz": INFO
    "org.zeroturnaround.exec": INFO
    "com.networknt.schema": OFF
    "org.eclipse.jgit": INFO
    "com.sonatype.insight.audit":
      appenders:
      - type: file
        # The file to which audit statements will be logged.
        currentLogFilename: ./log/audit.log
        # When the audit log file rotates, the archived audit log will be renamed to this and gzipped. The
        # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
        # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
        #
        # If archive is true, this must be specified.
        archivedLogFilenamePattern: ./log/audit-%d.log.gz
        # The number of archived audit log files to keep.
        archivedFileCount: 50
    #"com.sonatype.insight.policy.violation":
      #appenders:
        #- type: file
          # The file to which policy violations will be logged.
          #currentLogFilename: ./log/policy-violation.log
          # When the policy violation log file rotates, the archived policy violation log will be renamed to this
          # and gzipped. The %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
          # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
          #
          # If archive is true, this must be specified.
          #archivedLogFilenamePattern: ./log/policy-violation-%d.log.gz
          # The number of archived policy violation log files to keep.
          #archivedFileCount: 50

  appenders:

      # Settings for logging to stdout.
    - type: console

      # Do not display log statements below this threshold to stdout.
      threshold: INFO

      logFormat: "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n"

      # Settings for logging to a file.
    - type: file

      # Do not write log statements below this threshold to the file.
      threshold: ALL

      logFormat: "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n"

      # The file to which current statements will be logged.
      currentLogFilename: ./log/clm-server.log

      # When the log file rotates, the archived log will be renamed to this and gzipped. The
      # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
      # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
      #
      # If archive is true, this must be specified.
      archivedLogFilenamePattern: ./log/clm-server-%d.log.gz

      # The number of archived files to keep.
      archivedFileCount: 50

# Sample data is created for new installs.
createSampleData: true